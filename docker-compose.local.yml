version: '3.8'

services:
  # MongoDB (공통 데이터베이스)
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
      - ./logs/mongodb:/var/log/mongodb
    networks:
      - awana-network
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --logpath /var/log/mongodb/mongod.log --logappend

  # MySQL (TNT Camp 전용)
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./logs/mysql:/var/log/mysql
    networks:
      - awana-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Event Service
  event-service:
    build: ./services/event-service
    ports:
      - "3001:3001"
    environment:
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_EVENT_DB}?authSource=${MONGO_AUTH_DB}
      - PORT=3001
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - awana-network
    restart: unless-stopped

  # Church Service
  church-service:
    build: ./services/church-service
    ports:
      - "3002:3002"
    environment:
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_CHURCH_DB}?authSource=${MONGO_AUTH_DB}
      - PORT=3002
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - awana-network
    restart: unless-stopped

  # Receipt Service
  receipt-service:
    build: ./services/receipt-service
    ports:
      - "3003:3003"
    environment:
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_RECEIPT_DB}?authSource=${MONGO_AUTH_DB}
      - PORT=3003
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - awana-network
    restart: unless-stopped

  # TNT Camp Backend Server
  tntcamp-backend:
    build: ./backend-server
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${TNTCAMP_DB_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - PORT=8080
    volumes:
      - ./backend-server:/app
      - /app/node_modules
      - ./data/uploads:/app/uploads
      - ./logs/backend:/app/logs
    depends_on:
      - mysql
    networks:
      - awana-network
    restart: unless-stopped

  # TNT Camp Main App (개발 모드)
  tntcamp-app:
    build:
      context: ./frontend/english-camp-app
      dockerfile: Dockerfile.dev
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_HOST=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3100
    volumes:
      - ./frontend/english-camp-app:/app
      - /app/node_modules
    depends_on:
      - tntcamp-backend
    networks:
      - awana-network
    restart: unless-stopped

  # TNT Camp Admin App (개발 모드)
  tntcamp-admin:
    build:
      context: ./frontend/english-camp-admin
      dockerfile: Dockerfile.dev
    ports:
      - "3101:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_HOST=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3101
    volumes:
      - ./frontend/english-camp-admin:/app
      - /app/node_modules
    depends_on:
      - tntcamp-backend
    networks:
      - awana-network
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  mysql_data:
    driver: local

networks:
  awana-network:
    driver: bridge 
