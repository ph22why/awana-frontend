version: '3.8'

services:
  # MongoDB (공통 데이터베이스)
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - D:\eventdb\data:/data/db
      - D:\eventdb\logs:/var/log/mongodb
      - D:\eventdb\backup:/data/backup
    networks:
      - awana-network
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=awana123
    command: mongod --logpath /var/log/mongodb/mongod.log --logappend

  # MySQL (TNT Camp 데이터베이스)
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - D:\tntcampdb\mysql:/var/lib/mysql
      - D:\tntcampdb\init:/docker-entrypoint-initdb.d
      - D:\tntcampdb\backup:/backup
    networks:
      - awana-network
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=tntcamp
      - MYSQL_USER=tntcamp
      - MYSQL_PASSWORD=tntcamp123!@#
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Event Service
  event-service:
    build: ./services/event-service
    expose:
      - "3001"
    environment:
      - MONGODB_URI=mongodb://admin:awana123@mongodb:27017/event-service?authSource=admin
      - PORT=3001
      - NODE_ENV=production
    depends_on:
      - mongodb
    networks:
      - awana-network
    restart: unless-stopped

  # Church Service
  church-service:
    build: ./services/church-service
    expose:
      - "3002"
    environment:
      - MONGODB_URI=mongodb://admin:awana123@mongodb:27017/church-service?authSource=admin
      - PORT=3002
      - NODE_ENV=production
    depends_on:
      - mongodb
    networks:
      - awana-network
    restart: unless-stopped

  # Receipt Service
  receipt-service:
    build: ./services/receipt-service
    expose:
      - "3003"
    environment:
      - MONGODB_URI=mongodb://admin:awana123@mongodb:27017/receipt-service?authSource=admin
      - PORT=3003
      - NODE_ENV=production
    depends_on:
      - mongodb
    networks:
      - awana-network
    restart: unless-stopped

  # Frontend Service (React + Nginx with HTTPS and API Proxy)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - NODE_ENV=production
    ports:
      - "80:80"
      - "3000:443"
    volumes:
      - ./nginx-https-awanaevent-with-api-proxy.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/letsencrypt
      - ./ssl/www:/var/www/certbot
    environment:
      - NODE_ENV=production
    depends_on:
      - event-service
      - church-service
      - receipt-service
    networks:
      - awana-network
    restart: unless-stopped

  # TNT Camp Backend Server
  tntcamp-backend:
    build: ./backend-server
    expose:
      - "8080"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=tntcamp
      - DB_PASSWORD=tntcamp123!@#
      - DB_NAME=tntcamp
      - PORT=8080
    volumes:
      - D:\tntcampdb\uploads:/app/uploads
      - D:\tntcampdb\logs:/app/logs
    depends_on:
      - mysql
    networks:
      - awana-network
    restart: unless-stopped

  # TNT Camp Main App
  tntcamp-app:
    build: 
      context: ./awana-english-camp-app
      dockerfile: Dockerfile
    expose:
      - "80"
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_HOST=https://awanaevent.com
      - FAST_REFRESH=false
      - GENERATE_SOURCEMAP=false
      - PUBLIC_URL=/tntcamp
      - REACT_APP_CACHE_BUST=v3
      - WDS_SOCKET_PORT=443
    networks:
      - awana-network
    restart: unless-stopped

  # TNT Camp Admin App
  tntcamp-admin:
    build: 
      context: ./awana-english-camp-admin
      dockerfile: Dockerfile
    expose:
      - "80"
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_HOST=https://awanaevent.com
      - FAST_REFRESH=false
      - GENERATE_SOURCEMAP=false
      - PUBLIC_URL=/tntadmin
    networks:
      - awana-network
    restart: unless-stopped


volumes:
  mongodb_data:
    driver: local

networks:
  awana-network:
    driver: bridge 