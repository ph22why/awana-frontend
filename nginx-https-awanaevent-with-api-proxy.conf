events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # gzip 압축
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 업스트림 서버 정의
    upstream frontend {
        server host.docker.internal:3000;
    }
    
    upstream event_service {
        server event-service:3001;
    }
    
    upstream church_service {
        server church-service:3002;
    }
    
    upstream receipt_service {
        server receipt-service:3003;
    }
    
    # HTTP 서버 (포트 80) - awanaevent.com을 3000번 포트로 프록시
    server {
        listen 80;
        server_name awanaevent.com www.awanaevent.com;
        
        # 프론트엔드 프록시 (React 앱)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
        }
        
        # API 라우팅
        location /api/events/ {
            proxy_pass http://event_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/churches/ {
            proxy_pass http://church_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/receipts/ {
            proxy_pass http://receipt_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # HTTPS 서버 (포트 443) - 향후 SSL 인증서 설정용
    server {
        listen 443 ssl;
        server_name awanaevent.com www.awanaevent.com;
        
        # SSL 설정 (임시로 자체 서명 인증서 사용)
        ssl_certificate /etc/letsencrypt/live/awanaevent.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/awanaevent.com/privkey.pem;
        
        # SSL이 없을 경우 HTTP로 리다이렉트
        error_page 497 301 =307 http://$host$request_uri;
        
        # 프론트엔드 프록시
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
        }
        
        # API 라우팅 (HTTPS)
        location /api/events/ {
            proxy_pass http://event_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        location /api/churches/ {
            proxy_pass http://church_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        location /api/receipts/ {
            proxy_pass http://receipt_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
} 